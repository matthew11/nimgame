/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package szakdoga_prototype.nimgame.original.UI;

import java.awt.Component;
import javax.swing.JOptionPane;
import szakdoga_prototype.GameStatusDisplayer;
import szakdoga_prototype.gameengine.Player;
import szakdoga_prototype.gameengine.exceptions.GameException;
import szakdoga_prototype.nimgame.core.NimGameCore;
import szakdoga_prototype.nimgame.core.NimPlayer;

/**
 *
 * @author matthew
 */
public class MainPanel extends javax.swing.JPanel {

    private final NimGameCore nimGame;
    private final GameStatusDisplayer statusDisplayer;

    /**
     * Creates new form mainPanel
     *
     * @param nimGame
     */
    public MainPanel(final NimGameCore nimGame, final GameStatusDisplayer statusDisplayer) {
        this.nimGame = nimGame;
        initComponents();
        for (int i = 0; i < nimGame.getHeapCount(); i++) {
            this.add(new HeapPanel(this, i, nimGame.getHeapValue(i)));
        }
        this.statusDisplayer = statusDisplayer;
        this.statusDisplayer.setCurrentPlayer(nimGame.getCurrentPlayer());
        this.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridBagLayout());
    }// </editor-fold>//GEN-END:initComponents

    private void updatePanels() {
        for (Component component : this.getComponents()) {
            if (component instanceof HeapPanel) {
                HeapPanel panel = (HeapPanel) component;
                panel.setPanelValue(nimGame.getHeapValue(panel.getPanelID()));
            }
        }
    }

    void heapChanged(int panelID, int value) {
        try {
            ((NimPlayer) nimGame.getCurrentPlayer()).doNextStep(panelID, value);
            updatePanels();
            if(nimGame.isInEndState()){
                JOptionPane.showMessageDialog(this, "Game ended. Winning player is: " + nimGame.getWiningPlayer().getName());
            }else{
                this.statusDisplayer.setCurrentPlayer(nimGame.getCurrentPlayer());
            }

        } catch (GameException ex) {
            JOptionPane.showMessageDialog(this, "The requested opration cannot be processed: " + ex.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
