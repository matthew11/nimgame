/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gameplayer;

import java.util.logging.Level;
import java.util.logging.Logger;
import gameplayer.UI.DisableableJPanel;
import javax.swing.JOptionPane;
import gameplayer.gameengine.GameCore;
import gameplayer.gameengine.eventmanager.EventChannelInvalidException;
import gameplayer.gameengine.eventmanager.EventManager;
import gameplayer.gameengine.eventmanager.EventPermissionDeniedException;
import gameplayer.gameengine.eventmanager.EventRegistry;
import gameplayer.gameengine.exceptions.GameSettingsInvalidException;
import gameplayer.gameengine.exceptions.GameSetupIncompleteException;
import gameplayer.gameengine.exceptions.PlayerAlreadyRegisteredException;
import gameplayer.gameengine.exceptions.PlayerListFullException;
import gameplayer.nimgame.core.NimGameCore;
import gameplayer.nimgame.northcott.UI.NorthcottMainPanel;
import gameplayer.nimgame.original.UI.NimMainPanel;
import gameplayer.providers.GameEntityProvider;

/**
 *
 * @author Máté Pozsgay
 */
public class MainWindow extends javax.swing.JFrame {

    public static enum SupportedGames {
        GAME_NIM,
        GAME_NORTHCOTT
    }

    private GameController gameController;

    private void createGame(SupportedGames gameToCreate) {
        GameEntityProvider gameEntityProvider;
        GameCore game;
        if (this.gameController != null) {
            this.gameController.destroyGame();
        }
            try {
        switch (gameToCreate) {
            case GAME_NIM: {
                game = new NimGameCore();
                gameEntityProvider = new NimMainPanel((NimGameCore) game);
                break;
            }
            case GAME_NORTHCOTT: {
                game = new NimGameCore();
                gameEntityProvider = new NorthcottMainPanel((NimGameCore) game);
                break;
            }
            default: {
                JOptionPane.showMessageDialog(this, "The selected game type is not yet implemented.");
                return;
            }
        }
        } catch (EventChannelInvalidException ex) {
            JOptionPane.showMessageDialog(this, "Failed to create game: " + ex.getMessage());
            return;
        }
        this.gameController = new GameController(game, gameEntityProvider);
        gameMainPluginPlaceholder.setEnabled(true);
        gameSettingsPluginplaceholder.setEnabled(true);
        gameStatusPanelPluginPlaceholder.setEnabled(true);
        startGameButton.setEnabled(true);
        gameController.loadUIElements(gameMainPluginPlaceholder, gameSettingsPluginplaceholder, gameStatusPanelPluginPlaceholder);
        this.repaint();
    }

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        EventManager.createEventChannel(this, EventRegistry.EVENT_UI);
        EventManager.createEventChannel(this, EventRegistry.EVENT_UI_SETTINGS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GameTypeButtonGroup = new javax.swing.ButtonGroup();
        gameMainPluginPlaceholder = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        startGameButton = new javax.swing.JButton();
        gameSettingsPanel = new javax.swing.JPanel();
        gameSettingsPluginplaceholder = new DisableableJPanel();
        gameStatusPanelPluginPlaceholder = new DisableableJPanel();
        gameSettingsLabel = new javax.swing.JLabel();
        mainMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        miSelectGameNim = new javax.swing.JRadioButtonMenuItem();
        miSelectGameChess = new javax.swing.JRadioButtonMenuItem();
        resetMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NimGame");
        setSize(new java.awt.Dimension(1024, 768));

        gameMainPluginPlaceholder.setLayout(new javax.swing.BoxLayout(gameMainPluginPlaceholder, javax.swing.BoxLayout.LINE_AXIS));

        sidePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        sidePanel.setPreferredSize(new java.awt.Dimension(300, 739));

        startGameButton.setText("Start Game");
        startGameButton.setEnabled(false);
        startGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameButtonActionPerformed(evt);
            }
        });

        gameSettingsPluginplaceholder.setLayout(new javax.swing.BoxLayout(gameSettingsPluginplaceholder, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout gameSettingsPanelLayout = new javax.swing.GroupLayout(gameSettingsPanel);
        gameSettingsPanel.setLayout(gameSettingsPanelLayout);
        gameSettingsPanelLayout.setHorizontalGroup(
            gameSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gameSettingsPluginplaceholder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        gameSettingsPanelLayout.setVerticalGroup(
            gameSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameSettingsPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(gameSettingsPluginplaceholder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        gameStatusPanelPluginPlaceholder.setLayout(new javax.swing.BoxLayout(gameStatusPanelPluginPlaceholder, javax.swing.BoxLayout.LINE_AXIS));

        gameSettingsLabel.setText("Game settings:");

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameStatusPanelPluginPlaceholder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gameSettingsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addComponent(gameSettingsLabel)
                        .addGap(0, 212, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(startGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gameStatusPanelPluginPlaceholder, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameSettingsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gameSettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startGameButton))
        );

        jMenu1.setText("Program");

        jMenu3.setText("Select game");

        miSelectGameNim.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
        GameTypeButtonGroup.add(miSelectGameNim);
        miSelectGameNim.setText("Classic NIM game");
        miSelectGameNim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSelectGameNimActionPerformed(evt);
            }
        });
        jMenu3.add(miSelectGameNim);

        miSelectGameChess.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        GameTypeButtonGroup.add(miSelectGameChess);
        miSelectGameChess.setText("Northcott-chess");
        miSelectGameChess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSelectGameChessActionPerformed(evt);
            }
        });
        jMenu3.add(miSelectGameChess);

        jMenu1.add(jMenu3);

        resetMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        resetMenuItem.setText("Reset program");
        resetMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(resetMenuItem);
        jMenu1.add(jSeparator1);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenuItem);

        mainMenu.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Undo");
        jMenu2.add(jMenuItem3);

        mainMenu.add(jMenu2);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gameMainPluginPlaceholder, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gameMainPluginPlaceholder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void startGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameButtonActionPerformed
        try {
            gameController.startGame();
            startGameButton.setEnabled(false);
            gameSettingsPluginplaceholder.setEnabled(false);
        } catch (GameSetupIncompleteException ex) {
            JOptionPane.showMessageDialog(this, "Game setup is incomplete: " + ex.getMessage());
        } catch (GameSettingsInvalidException | PlayerAlreadyRegisteredException | PlayerListFullException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error UNHANDLED EXCEPTION: " + ex.getMessage());
        }
    }//GEN-LAST:event_startGameButtonActionPerformed

    private void resetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetMenuItemActionPerformed
        if (this.gameController != null) {
            gameController.destroyGame();
            this.gameController = null;
            startGameButton.setEnabled(false);
            this.revalidate();
            this.repaint();
        }
    }//GEN-LAST:event_resetMenuItemActionPerformed

    private void miSelectGameNimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSelectGameNimActionPerformed
        createGame(SupportedGames.GAME_NIM);
    }//GEN-LAST:event_miSelectGameNimActionPerformed

    private void miSelectGameChessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSelectGameChessActionPerformed
        createGame(SupportedGames.GAME_NORTHCOTT);
    }//GEN-LAST:event_miSelectGameChessActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        try {
            EventManager.deleteEventChannel(this, EventRegistry.EVENT_UI_SETTINGS);
            EventManager.deleteEventChannel(this, EventRegistry.EVENT_UI);
        } catch (EventChannelInvalidException | EventPermissionDeniedException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GameTypeButtonGroup;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JPanel gameMainPluginPlaceholder;
    private javax.swing.JLabel gameSettingsLabel;
    private javax.swing.JPanel gameSettingsPanel;
    private javax.swing.JPanel gameSettingsPluginplaceholder;
    private javax.swing.JPanel gameStatusPanelPluginPlaceholder;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JRadioButtonMenuItem miSelectGameChess;
    private javax.swing.JRadioButtonMenuItem miSelectGameNim;
    private javax.swing.JMenuItem resetMenuItem;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JButton startGameButton;
    // End of variables declaration//GEN-END:variables
}
