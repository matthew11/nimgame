/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gameplayer.nimgame.original.UI;

import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Máté Pozsgay
 */
public final class HeapPanel extends javax.swing.JPanel {

    private final int panelID;
    private final NimMainPanel parent;
    private final SpinnerNumberModel spinnerModel;

    /**
     * Creates new form heapPanel
     */
    public HeapPanel(final NimMainPanel parent, final int panelID, final int panelValue) {
        this.panelID = panelID;
        this.parent = parent;
        spinnerModel = new SpinnerNumberModel(1, 1, panelValue, 1);
        initComponents();
        this.heapName.setText(Integer.toString(panelID + 1));
        this.heapValue.setText(Integer.toString(panelValue));
        setPanelValue(panelValue);
    }

    public int getPanelID() {
        return panelID;
    }

    public int getPanelValue() {
        return Integer.parseInt(heapValue.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        heapValue = new javax.swing.JTextField();
        heapName = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        alterSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Amount in heap:");

        heapValue.setEditable(false);
        heapValue.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        heapValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        heapValue.setText("NOT SET");

        heapName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heapName.setText("NAME_OF_HEAP");

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        alterSpinner.setModel(spinnerModel);

        jLabel2.setText("Remove:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heapName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(heapValue)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(alterSpinner))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heapName)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(heapValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alterSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed

        parent.heapChanged(panelID, (int) alterSpinner.getValue());
    }//GEN-LAST:event_removeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner alterSpinner;
    private javax.swing.JLabel heapName;
    private javax.swing.JTextField heapValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables

    void setPanelValue(int panelValue) {
        heapValue.setText(Integer.toString(panelValue));
        if (panelValue == 0) {
            this.setVisible(false);
        }
        spinnerModel.setMaximum(panelValue);
        if (spinnerModel.getMaximum().compareTo(spinnerModel.getNumber()) < 0) {
            spinnerModel.setValue(spinnerModel.getMaximum());
        }
    }
}
